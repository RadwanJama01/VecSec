==============================================
  üöÄ VecSec - START HERE
==============================================

‚úÖ ALL SERVICES NOW WORKING:
   ‚Ä¢ Docker + Prometheus + Grafana
   ‚Ä¢ ChromaDB Cloud Memory
   ‚Ä¢ Real-time Metrics on localhost:3000

==============================================
  1Ô∏è‚É£  START EVERYTHING (One Command)
==============================================

    ./START_EVERYTHING.sh

This starts:
  ‚úÖ Docker monitoring (Prometheus + Grafana)
  ‚úÖ Metrics dashboard on http://localhost:3000
  ‚úÖ All services ready

Login to Grafana:
  Username: admin
  Password: vecsec_admin

==============================================
  2Ô∏è‚É£  RUN SECURITY TESTS
==============================================

    python3 Good_Vs_Evil.py --test-type blind --blind-tests 20

This will:
  ‚Ä¢ Generate malicious queries
  ‚Ä¢ Test security agent
  ‚Ä¢ Track metrics automatically
  ‚Ä¢ Store results in JSON files

==============================================
  3Ô∏è‚É£  VIEW METRICS (Choose One)
==============================================

Option A - GUI Dashboard (Recommended):
  Open: http://localhost:3000
  Login: admin / vecsec_admin
  Import dashboard (if needed)

Option B - Simple Viewer:
    python3 SIMPLE_METRICS_VIEWER.py

Option C - Direct JSON:
    cat learning_metrics.json
    cat malicious_inputs_*.json

==============================================
  4Ô∏è‚É£  STARTUP SEQUENCE
==============================================

1. Start monitoring:
   ./START_EVERYTHING.sh

2. Run tests:
   python3 Good_Vs_Evil.py --test-type blind --blind-tests 20

3. View results:
   ‚Ä¢ Browser: http://localhost:3000
   ‚Ä¢ Terminal: python3 SIMPLE_METRICS_VIEWER.py

==============================================
  üìä SERVICES STATUS
==============================================

Check if running:
    docker ps --filter "name=vecsec"

Stop services:
    docker-compose -f docker-compose.monitoring.yml down

Start again:
    ./START_EVERYTHING.sh

==============================================
  üéØ CHROMA CLOUD MEMORY
==============================================

Setup ChromaDB:
    python3 CHROMA_CLOUD_SETUP.py

For cloud storage:
    # Add to .env:
    CHROMA_API_KEY=your_key_here
    CHROMA_HOST=chromadb.net

==============================================
  ‚úÖ READY TO DEMO
==============================================

Everything works immediately:
  ‚Ä¢ Docker + Grafana on localhost:3000
  ‚Ä¢ Prometheus on localhost:9090
  ‚Ä¢ ChromaDB cloud memory
  ‚Ä¢ Real-time metrics
  
üìä ALL METRICS TRACKED:
  ‚úÖ Detection Accuracy
  ‚úÖ Average Response Time
  ‚úÖ Request Volume (testing period)
  ‚úÖ Files Processed Over Time
  ‚úÖ Threat Detection
  ‚úÖ Threats Blocked Over Time
  ‚úÖ Security Status
  ‚úÖ System Uptime
  
All displayed as graphs in Grafana!

Just run: ./START_EVERYTHING.sh
